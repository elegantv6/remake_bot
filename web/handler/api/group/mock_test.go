// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package group

import (
	"context"
	"github.com/maguro-alternative/remake_bot/web/handler/api/group/internal"
	"sync"
)

// Ensure, that RepositoryMock does implement Repository.
// If this is not the case, regenerate this file with moq.
var _ Repository = &RepositoryMock{}

// RepositoryMock is a mock implementation of Repository.
//
//	func TestSomethingThatUsesRepository(t *testing.T) {
//
//		// make and configure a mocked Repository
//		mockedRepository := &RepositoryMock{
//			UpdateLineBotFunc: func(ctx context.Context, lineBot *internal.LineBot) error {
//				panic("mock out the UpdateLineBot method")
//			},
//		}
//
//		// use mockedRepository in code that requires Repository
//		// and then make assertions.
//
//	}
type RepositoryMock struct {
	// UpdateLineBotFunc mocks the UpdateLineBot method.
	UpdateLineBotFunc func(ctx context.Context, lineBot *internal.LineBot) error

	// calls tracks calls to the methods.
	calls struct {
		// UpdateLineBot holds details about calls to the UpdateLineBot method.
		UpdateLineBot []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// LineBot is the lineBot argument value.
			LineBot *internal.LineBot
		}
	}
	lockUpdateLineBot sync.RWMutex
}

// UpdateLineBot calls UpdateLineBotFunc.
func (mock *RepositoryMock) UpdateLineBot(ctx context.Context, lineBot *internal.LineBot) error {
	if mock.UpdateLineBotFunc == nil {
		panic("RepositoryMock.UpdateLineBotFunc: method is nil but Repository.UpdateLineBot was just called")
	}
	callInfo := struct {
		Ctx     context.Context
		LineBot *internal.LineBot
	}{
		Ctx:     ctx,
		LineBot: lineBot,
	}
	mock.lockUpdateLineBot.Lock()
	mock.calls.UpdateLineBot = append(mock.calls.UpdateLineBot, callInfo)
	mock.lockUpdateLineBot.Unlock()
	return mock.UpdateLineBotFunc(ctx, lineBot)
}

// UpdateLineBotCalls gets all the calls that were made to UpdateLineBot.
// Check the length with:
//
//	len(mockedRepository.UpdateLineBotCalls())
func (mock *RepositoryMock) UpdateLineBotCalls() []struct {
	Ctx     context.Context
	LineBot *internal.LineBot
} {
	var calls []struct {
		Ctx     context.Context
		LineBot *internal.LineBot
	}
	mock.lockUpdateLineBot.RLock()
	calls = mock.calls.UpdateLineBot
	mock.lockUpdateLineBot.RUnlock()
	return calls
}
